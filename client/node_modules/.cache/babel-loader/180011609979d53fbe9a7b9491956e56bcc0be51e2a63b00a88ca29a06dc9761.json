{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\AskQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskQuestion = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create FormData object to send form data including the image\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    try {\n      // Get the authentication token from localStorage\n      const token = localStorage.getItem(\"token\"); // assuming it's stored in localStorage\n\n      if (!token) {\n        // Handle case when token is not available\n        console.error(\"Token not available.\");\n        return;\n      }\n\n      // Make POST request to backend API with token in headers\n      const response = await axios.post(\"/api/community/askQuestion\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Handle successful post creation\n      console.log(\"Post created successfully:\", response.data);\n\n      // Clear form fields\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      // Handle error\n      console.error(\"Error creating post:\", error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Ask Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AskQuestion, \"eiXkh+GEjRZ8Svxty8bnXm2rLL0=\");\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AskQuestion","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","formData","FormData","append","token","localStorage","getItem","console","error","response","post","headers","Authorization","log","data","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/AskQuestion.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AskQuestion = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create FormData object to send form data including the image\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"content\", content);\r\n\r\n    try {\r\n      // Get the authentication token from localStorage\r\n      const token = localStorage.getItem(\"token\"); // assuming it's stored in localStorage\r\n\r\n      if (!token) {\r\n        // Handle case when token is not available\r\n        console.error(\"Token not available.\");\r\n        return;\r\n      }\r\n\r\n      // Make POST request to backend API with token in headers\r\n      const response = await axios.post(\r\n        \"/api/community/askQuestion\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      // Handle successful post creation\r\n      console.log(\"Post created successfully:\", response.data);\r\n\r\n      // Clear form fields\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n    } catch (error) {\r\n      // Handle error\r\n      console.error(\"Error creating post:\", error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Render form fields for title, content, and image */}\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Title\"\r\n      />\r\n      <textarea\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        placeholder=\"Content\"\r\n      ></textarea>\r\n\r\n      <button type=\"submit\">Ask Question</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;IAC/BO,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEP,OAAO,CAAC;IAEnC,IAAI;MACF;MACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;MAE7C,IAAI,CAACF,KAAK,EAAE;QACV;QACAG,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF;;MAEA;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAC/B,4BAA4B,EAC5BT,QAAQ,EACR;QACEU,OAAO,EAAE;UACPC,aAAa,EAAG,UAASR,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CACF;;MAED;MACAG,OAAO,CAACM,GAAG,CAAC,4BAA4B,EAAEJ,QAAQ,CAACK,IAAI,CAAC;;MAExD;MACAnB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACd;MACAD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,QAAQ,CAACK,IAAI,CAAC;IAC5D;EACF,CAAC;EAED,oBACEvB,OAAA;IAAMwB,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAE3BzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGpB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACFlC,OAAA;MACE2B,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGpB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX,eAEZlC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC;AAEX,CAAC;AAAChC,EAAA,CAhEID,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAkEjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}