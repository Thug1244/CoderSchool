{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport { Stack, Box } from \"@mui/material\";\nimport { getSender } from \"../config/ChatLogics\";\nimport \"./MyChats.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = _ref => {\n  _s();\n  let {\n    fetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n  const [loggedUser, setLoggedUser] = useState();\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      console.log(data);\n      setChats(data);\n    } catch (error) {\n      window.alert(error.message);\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mychats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mychats-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"My Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mychats-list\",\n        children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n          className: \"chat-list\",\n          sx: {\n            overflowY: \"auto\"\n          },\n          children: chats.map(chat => {\n            var _chat$lastMessage, _chat$lastMessage2;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: `chat ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? \"selected\" : \"\"}`,\n              onClick: () => setSelectedChat(chat),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"chat-img\",\n                src: chat.image,\n                alt: \"chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-name\",\n                  children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-preview\",\n                  children: (_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-time\",\n                children: (_chat$lastMessage2 = chat.lastMessage) === null || _chat$lastMessage2 === void 0 ? void 0 : _chat$lastMessage2.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, chat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"LXAM3Ct8cu4VHioF0N7hjNZNBFg=\");\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useEffect","useState","ChatState","axios","AddCircleIcon","Stack","Box","getSender","jsxDEV","_jsxDEV","MyChats","_ref","_s","fetchAgain","user","selectedChat","setSelectedChat","chats","setChats","loggedUser","setLoggedUser","fetchChats","config","headers","Authorization","token","data","get","console","log","error","window","alert","message","JSON","parse","localStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","sx","overflowY","map","chat","_chat$lastMessage","_chat$lastMessage2","id","onClick","src","image","alt","isGroupChat","users","chatName","lastMessage","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/MyChats.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport { Stack, Box } from \"@mui/material\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport \"./MyChats.css\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mychats-container\">\r\n        <div className=\"mychats-header\">\r\n          <span>My Chats</span>\r\n          <button className=\"new-chat-button\">\r\n            <b>New Group Chat</b>\r\n            <AddCircleIcon />\r\n          </button>\r\n        </div>\r\n        <div className=\"mychats-list\">\r\n          {chats ? (\r\n            <Stack className=\"chat-list\" sx={{ overflowY: \"auto\" }}>\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  className={`chat ${\r\n                    selectedChat?.id === chat.id ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  key={chat.id}\r\n                >\r\n                  <img className=\"chat-img\" src={chat.image} alt=\"chat\" />\r\n                  <div className=\"chat-details\">\r\n                    <span className=\"chat-name\">\r\n                      {!chat.isGroupChat\r\n                        ? getSender(loggedUser, chat.users)\r\n                        : chat.chatName}\r\n                    </span>\r\n                    <span className=\"chat-preview\">\r\n                      {chat.lastMessage?.message}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"chat-time\">{chat.lastMessage?.createdAt}</div>\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <p>Loading....</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {selectedChat && (\r\n        <div className=\"selected-chat-container\">\r\n          <h2>All Chats</h2>\r\n          {/* Write your code here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,+BAA+B;AACzD,SAASC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC1C,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC7B,MAAM;IAAEG,IAAI;IAAEC,YAAY;IAAEC,eAAe;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGhB,SAAS,EAAE;EAC5E,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,EAAE;EAE9C,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASV,IAAI,CAACW,KAAM;QACtC;MACF,CAAC;MAED,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,WAAW,EAAEL,MAAM,CAAC;MACrDM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBR,QAAQ,CAACQ,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,MAAM,CAACC,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;IAC7B;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACdoB,aAAa,CAACc,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3DhB,UAAU,EAAE;EACd,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAK8B,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAChC7B,OAAA;QAAK8B,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7B7B,OAAA;UAAA6B,QAAA,EAAM;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eACrBlC,OAAA;UAAQ8B,SAAS,EAAC,iBAAiB;UAAAD,QAAA,gBACjC7B,OAAA;YAAA6B,QAAA,EAAG;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,eACrBlC,OAAA,CAACL,aAAa;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL,eACNlC,OAAA;QAAK8B,SAAS,EAAC,cAAc;QAAAD,QAAA,EAC1BrB,KAAK,gBACJR,OAAA,CAACJ,KAAK;UAACkC,SAAS,EAAC,WAAW;UAACK,EAAE,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAP,QAAA,EACpDrB,KAAK,CAAC6B,GAAG,CAAEC,IAAI;YAAA,IAAAC,iBAAA,EAAAC,kBAAA;YAAA,oBACdxC,OAAA,CAACH,GAAG;cACFiC,SAAS,EAAG,QACV,CAAAxB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEmC,EAAE,MAAKH,IAAI,CAACG,EAAE,GAAG,UAAU,GAAG,EAC7C,EAAE;cACHC,OAAO,EAAEA,CAAA,KAAMnC,eAAe,CAAC+B,IAAI,CAAE;cAAAT,QAAA,gBAGrC7B,OAAA;gBAAK8B,SAAS,EAAC,UAAU;gBAACa,GAAG,EAAEL,IAAI,CAACM,KAAM;gBAACC,GAAG,EAAC;cAAM;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAG,eACxDlC,OAAA;gBAAK8B,SAAS,EAAC,cAAc;gBAAAD,QAAA,gBAC3B7B,OAAA;kBAAM8B,SAAS,EAAC,WAAW;kBAAAD,QAAA,EACxB,CAACS,IAAI,CAACQ,WAAW,GACdhD,SAAS,CAACY,UAAU,EAAE4B,IAAI,CAACS,KAAK,CAAC,GACjCT,IAAI,CAACU;gBAAQ;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACZ,eACPlC,OAAA;kBAAM8B,SAAS,EAAC,cAAc;kBAAAD,QAAA,GAAAU,iBAAA,GAC3BD,IAAI,CAACW,WAAW,cAAAV,iBAAA,uBAAhBA,iBAAA,CAAkBf;gBAAO;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACrB;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACH,eACNlC,OAAA;gBAAK8B,SAAS,EAAC,WAAW;gBAAAD,QAAA,GAAAW,kBAAA,GAAEF,IAAI,CAACW,WAAW,cAAAT,kBAAA,uBAAhBA,kBAAA,CAAkBU;cAAS;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAO;YAAA,GAbzDI,IAAI,CAACG,EAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAcR;UAAA,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI,gBAERlC,OAAA;UAAA6B,QAAA,EAAG;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACf;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,EACL5B,YAAY,iBACXN,OAAA;MAAK8B,SAAS,EAAC,yBAAyB;MAAAD,QAAA,eACtC7B,OAAA;QAAA6B,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC/B,EAAA,CA1EIF,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AA4Eb,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}