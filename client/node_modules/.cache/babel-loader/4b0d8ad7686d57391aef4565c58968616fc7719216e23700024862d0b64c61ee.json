{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\SingleChat.js\";\nimport React from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport Box from \"@mui/material/Box\";\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\nimport { getSenderFull } from \"../config/ChatLogics\";\nimport \"./ChattingStyling.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = _ref => {\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  //console.log(selectedChat.chatName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SingleChatMain\",\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"SingleChat\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {\n          className: \"IconButton\",\n          onClick: () => setSelectedChat(\"\"),\n          sx: {\n            display: {\n              xs: \"block\",\n              sm: \"none\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {\n            className: \"IconButton\",\n            onClick: () => setSelectedChat(\"\"),\n            sx: {\n              display: {\n                xs: \"none\",\n                sm: \"block\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedChat.users[1].pic,\n            alt: selectedChat.users[1].name,\n            style: {\n              width: \"50px\",\n              height: \"50px\",\n              borderRadius: \"50%\",\n              objectFit: \"cover\",\n              margin: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), selectedChat.users[1].name.toUpperCase()]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {\n            className: \"IconButton\",\n            onClick: () => setSelectedChat(\"\"),\n            sx: {\n              display: {\n                xs: \"none\",\n                sm: \"block\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n            padding: \"3px\",\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: \"large\",\n            overflow: \"hidden\",\n            backgroundColor: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        fontSize: \"28px\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","ChatState","Box","ArrowCircleLeftIcon","getSenderFull","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleChat","_ref","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","className","children","onClick","sx","display","xs","sm","fileName","_jsxFileName","lineNumber","columnNumber","isGroupChat","src","users","pic","alt","name","style","width","height","borderRadius","objectFit","margin","toUpperCase","chatName","flexDirection","justifyContent","padding","overflow","backgroundColor","alignItems","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/SingleChat.js"],"sourcesContent":["import React from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\r\nimport { getSenderFull } from \"../config/ChatLogics\";\r\nimport \"./ChattingStyling.css\";\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const { user, selectedChat, setSelectedChat } = ChatState();\r\n  //console.log(selectedChat.chatName);\r\n  return (\r\n    <div className=\"SingleChatMain\">\r\n      {selectedChat ? (\r\n        <>\r\n          <text className=\"SingleChat\">\r\n            <ArrowCircleLeftIcon\r\n              className=\"IconButton\"\r\n              onClick={() => setSelectedChat(\"\")}\r\n              sx={{\r\n                display: { xs: \"block\", sm: \"none\" },\r\n              }}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                <ArrowCircleLeftIcon\r\n                  className=\"IconButton\"\r\n                  onClick={() => setSelectedChat(\"\")}\r\n                  sx={{\r\n                    display: { xs: \"none\", sm: \"block\" },\r\n                  }}\r\n                />\r\n                <img\r\n                  src={selectedChat.users[1].pic}\r\n                  alt={selectedChat.users[1].name}\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                    borderRadius: \"50%\",\r\n                    objectFit: \"cover\",\r\n\r\n                    margin: \"10px\",\r\n                  }}\r\n                />\r\n                {selectedChat.users[1].name.toUpperCase()}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ArrowCircleLeftIcon\r\n                  className=\"IconButton\"\r\n                  onClick={() => setSelectedChat(\"\")}\r\n                  sx={{\r\n                    display: { xs: \"none\", sm: \"block\" },\r\n                  }}\r\n                />\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"column\"\r\n                  justifyContent=\"flex-end\"\r\n                  padding=\"3px\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  borderRadius=\"large\"\r\n                  overflow=\"hidden\"\r\n                  backgroundColor=\"white\"\r\n                >\r\n                  {/*Messages here */}\r\n                </Box>\r\n\r\n                {/*<UpdateGroupChatModal\r\n              fetchAgain={fetchAgain}\r\n              setFetchAgain={setFetchAgain}\r\n            />*/}\r\n              </>\r\n            )}\r\n          </text>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          height=\"100%\"\r\n        >\r\n          <text fontSize=\"28px\">Click on a user to start chatting</text>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}