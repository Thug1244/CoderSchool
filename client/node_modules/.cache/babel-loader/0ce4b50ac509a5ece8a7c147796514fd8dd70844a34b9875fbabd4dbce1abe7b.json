{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport { Stack, Box } from \"@mui/material\";\nimport { getSender } from \"../config/ChatLogics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = _ref => {\n  _s();\n  let {\n    fetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n  const [loggedUser, setLoggedUser] = useState();\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      console.log(data);\n      setChats(data);\n    } catch (error) {\n      window.alert(error.message);\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: selectedChat ? \"none\" : \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        paddingLeft: \"20px\",\n        backgroundColor: \"white\",\n        borderWidth: \"10px\",\n        width: \"300px\",\n        height: \"100%\",\n        borderRadius: \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"28px\",\n          color: \"black\",\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: \"3px\"\n        },\n        children: [\"My Chats\", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: \"flex\",\n            padding: \"3px\",\n            marginRight: \"5px\",\n            marginTop: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              marginTop: \"3px\",\n              marginRight: \"3px\"\n            },\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"3px\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          width: \"90%\",\n          height: \"100%\",\n          overflow: \"hidden\"\n        },\n        children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n          overflow: \"scroll\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => setSelectedChat(chat),\n            cursor: \"pointer\",\n            px: 3,\n            py: 2,\n            borderRadius: \"lg\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), selectedChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"LXAM3Ct8cu4VHioF0N7hjNZNBFg=\");\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useEffect","useState","ChatState","axios","AddCircleIcon","Stack","Box","getSender","jsxDEV","_jsxDEV","MyChats","_ref","_s","fetchAgain","user","selectedChat","setSelectedChat","chats","setChats","loggedUser","setLoggedUser","fetchChats","config","headers","Authorization","token","data","get","console","log","error","window","alert","message","JSON","parse","localStorage","getItem","children","style","display","flexDirection","alignItems","paddingLeft","backgroundColor","borderWidth","width","height","borderRadius","fontSize","color","justifyContent","padding","marginRight","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","overflow","map","chat","onClick","cursor","px","py","isGroupChat","users","chatName","id","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/MyChats.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport { Stack, Box } from \"@mui/material\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: selectedChat ? \"none\" : \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          paddingLeft: \"20px\",\r\n          backgroundColor: \"white\",\r\n          borderWidth: \"10px\",\r\n          width: \"300px\",\r\n          height: \"100%\",\r\n          borderRadius: \"2%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontSize: \"28px\",\r\n            color: \"black\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            padding: \"3px\",\r\n          }}\r\n        >\r\n          My Chats\r\n          <button\r\n            style={{\r\n              display: \"flex\",\r\n              padding: \"3px\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n          >\r\n            <b style={{ marginTop: \"3px\", marginRight: \"3px\" }}>\r\n              New Group Chat\r\n            </b>\r\n            <AddCircleIcon />\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            padding: \"3px\",\r\n            backgroundColor: \"white\",\r\n            color: \"black\",\r\n            width: \"90%\",\r\n            height: \"100%\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          {chats ? (\r\n            <Stack overflow=\"scroll\">\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  cursor=\"pointer\"\r\n                  px={3}\r\n                  py={2}\r\n                  borderRadius=\"lg\"\r\n                  key={chat.id}\r\n                >\r\n                  <span>\r\n                    {!chat.isGroupChat\r\n                      ? getSender(loggedUser, chat.users)\r\n                      : chat.chatName}\r\n                  </span>\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <p>Loading....</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {selectedChat && (\r\n        <div\r\n          style={{ backgroundColor: \"white\", height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <h2>All Chats</h2>\r\n          {/* Write your code here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}