{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\QuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    postId\n  } = useParams();\n  const storedData = localStorage.getItem(\"userInfo\");\n  const parsedData = JSON.parse(storedData);\n  const id = parsedData._id;\n  const [updatedQuestion, setUpdatedQuestion] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\n  const [editCommentText, setEditCommentText] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmitComment = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const pic = parsedData.pic;\n      const newComment = {\n        content: commentInput,\n        pic: pic\n      };\n      const updatedQuestion = {\n        ...question\n      };\n      updatedQuestion.comments.push(newComment);\n      setQuestion(updatedQuestion);\n      console.log(newComment);\n      setCommentInput(\"\");\n      localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n      const response = await axios.post(`/api/community/${postId}/comments`, newComment, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      fetchQuestion();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to submit comment:\", error);\n    }\n  };\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get(`/api/community/${postId}`);\n      setQuestion(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch question:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n  }, [postId]);\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./Images/screenloading.gif\",\n        alt: \"loading\",\n        style: {\n          height: \"100vh\",\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  const handleEditQuestion = () => {\n    // check if the user is the author of the post\n    if (question.author === id) {\n      setShowEditModal(true);\n      setUpdatedQuestion({\n        ...question\n      }); // create a copy of the original question to modify\n    } else {\n      // console.log(\"Only the author can edit this post.\");\n      window.alert(\"Only the author can edit this post.\");\n    }\n  };\n  const handleSubmitEditedQuestion = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const response = await axios.put(`/api/community/${postId}`, updatedQuestion, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setQuestion(updatedQuestion); // update the question state with the updated question\n      setShowEditModal(false); // hide the edit modal\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to submit edited question:\", error);\n    }\n  };\n  const handleDeleteQuestion = async () => {\n    // check if the user is the author of the post\n    if (question.author === id) {\n      try {\n        setIsLoading(true);\n        const token = parsedData.token;\n        await axios.delete(`/api/community/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsLoading(false);\n        window.alert(\"Post deleted successfully\");\n        navigate(\"/community\");\n        // redirect the user to the community page or other appropriate page\n      } catch (error) {\n        setIsLoading(false);\n        console.error(\"Failed to delete question:\", error);\n        window.alert(\"Only admins can delete questions\");\n      }\n    } else {\n      console.log(\"Only the author can delete this post.\");\n      window.alert(\"Only admins can delete questions\");\n    }\n  };\n  const handleEditComment = (commentId, commentText) => {\n    setEditingCommentId(commentId);\n    setEditingCommentText(commentText);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const commentToUpdate = question.comments.find(comment => comment._id === editingCommentId);\n      const updatedComment = {\n        ...commentToUpdate,\n        content: editCommentText\n      };\n      const updatedQuestion = {\n        ...question\n      };\n      const commentIndex = updatedQuestion.comments.findIndex(comment => comment._id === editingCommentId);\n      updatedQuestion.comments[commentIndex] = updatedComment;\n      setQuestion(updatedQuestion);\n      setEditingCommentId(null);\n      setEditCommentText(\"\");\n      localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n      const response = await axios.put(`/api/community/${postId}/comments/${editingCommentId}`, updatedComment, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to update comment:\", error);\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const updatedQuestion = {\n        ...question\n      };\n      const commentIndex = updatedQuestion.comments.findIndex(comment => comment._id === commentId);\n      updatedQuestion.comments.splice(commentIndex, 1);\n      setQuestion(updatedQuestion);\n      localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n      const response = await axios.delete(`/api/community/${postId}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to delete comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"15px\",\n      padding: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#da4ea2\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Images/arrow.gif\",\n        alt: \"arrow\",\n        style: {\n          marginRight: \"10px\",\n          width: \"40px\",\n          height: \"40px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), question.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        padding: \"15px\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: question.content,\n        readOnly: true,\n        modules: {\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), \" \", new Date(question.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), question.author === id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditQuestion,\n        style: {\n          display: \"inline-flex\",\n          padding: \"5px\",\n          backgroundColor: \"green\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          marginTop: \"10px\",\n          marginRight: \"10px\"\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteQuestion,\n        style: {\n          display: \"inline-flex\",\n          padding: \"5px\",\n          backgroundColor: \"red\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          marginTop: \"10px\",\n          marginRight: \"10px\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedQuestion.title,\n        onChange: event => setUpdatedQuestion({\n          ...updatedQuestion,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: updatedQuestion.content,\n        onChange: value => setUpdatedQuestion({\n          ...updatedQuestion,\n          content: value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitEditedQuestion,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [question.comments.length, \" Answers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), question.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      // Assign a unique key prop to each rendered comment\n      style: {\n        padding: \"15px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        margin: \"5px\",\n        borderWidth: \"1px\",\n        borderRadius: \"15px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.pic,\n          alt: \"profile\",\n          style: {\n            width: \"5%\",\n            height: \"auto\",\n            borderRadius: \"50%\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), \" \", new Date(comment.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), comment.author === id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditComment(comment._id, comment.content),\n          style: {\n            display: \"inline-flex\",\n            padding: \"5px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            marginTop: \"10px\",\n            marginRight: \"10px\"\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteComment(comment._id),\n          style: {\n            display: \"inline-flex\",\n            padding: \"5px\",\n            backgroundColor: \"red\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            marginTop: \"10px\",\n            marginRight: \"10px\"\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this), editingCommentId === comment._id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"edit-comment-textarea\",\n          value: editCommentText,\n          onChange: e => setEditCommentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateComment,\n          style: {\n            display: \"inline-flex\",\n            padding: \"5px\",\n            backgroundColor: \"green\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            marginTop: \"10px\",\n            marginRight: \"10px\"\n          },\n          children: \"Update comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#da4ea2\"\n        },\n        children: \"Add your Comment here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: commentInput,\n        onChange: setCommentInput,\n        placeholder: \"Content\",\n        style: {\n          backgroundColor: \"white\"\n        },\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n            list: \"ordered\"\n          }, {\n            list: \"bullet\"\n          }, {\n            indent: \"-1\"\n          }, {\n            indent: \"+1\"\n          }], [\"link\", \"image\"], [\"clean\"]]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitComment,\n        style: {\n          backgroundColor: \"#da4ea2\",\n          color: \"white\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          cursor: \"pointer\",\n          marginTop: \"10px\"\n        },\n        children: isLoading ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"DQs9L5yo8poprJwprhmJPgjmXTs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionDetails","_s","question","setQuestion","commentInput","setCommentInput","isLoading","setIsLoading","postId","storedData","localStorage","getItem","parsedData","JSON","parse","id","_id","updatedQuestion","setUpdatedQuestion","showEditModal","setShowEditModal","editingCommentId","setEditingCommentId","editingCommentText","setEditingCommentText","editCommentText","setEditCommentText","navigate","handleSubmitComment","token","pic","newComment","content","comments","push","console","log","setItem","stringify","response","post","headers","Authorization","fetchQuestion","error","get","data","children","src","alt","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","handleEditQuestion","author","window","alert","handleSubmitEditedQuestion","put","handleDeleteQuestion","delete","handleEditComment","commentId","commentText","handleUpdateComment","commentToUpdate","find","comment","updatedComment","commentIndex","findIndex","handleDeleteComment","splice","backgroundColor","borderRadius","padding","color","display","alignItems","marginRight","title","border","marginBottom","value","readOnly","modules","toolbar","paddingBottom","Date","createdAt","toLocaleString","onClick","cursor","marginTop","type","onChange","event","target","length","map","borderStyle","borderColor","margin","borderWidth","dangerouslySetInnerHTML","__html","className","e","placeholder","header","list","indent","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/QuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst QuestionDetails = () => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { postId } = useParams();\r\n  const storedData = localStorage.getItem(\"userInfo\");\r\n  const parsedData = JSON.parse(storedData);\r\n  const id = parsedData._id;\r\n  const [updatedQuestion, setUpdatedQuestion] = useState(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editingCommentId, setEditingCommentId] = useState(null);\r\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\r\n\r\n  const [editCommentText, setEditCommentText] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmitComment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const pic = parsedData.pic;\r\n      const newComment = { content: commentInput, pic: pic };\r\n      const updatedQuestion = { ...question };\r\n      updatedQuestion.comments.push(newComment);\r\n      setQuestion(updatedQuestion);\r\n      console.log(newComment);\r\n      setCommentInput(\"\");\r\n      localStorage.setItem(\r\n        `question_${postId}_comments`,\r\n        JSON.stringify(updatedQuestion.comments)\r\n      );\r\n      const response = await axios.post(\r\n        `/api/community/${postId}/comments`,\r\n        newComment,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      fetchQuestion();\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to submit comment:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/community/${postId}`);\r\n      setQuestion(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch question:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, [postId]);\r\n  if (!question) {\r\n    return (\r\n      <>\r\n        <img\r\n          src=\"./Images/screenloading.gif\"\r\n          alt=\"loading\"\r\n          style={{ height: \"100vh\", width: \"100%\" }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  const handleEditQuestion = () => {\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      setShowEditModal(true);\r\n      setUpdatedQuestion({ ...question }); // create a copy of the original question to modify\r\n    } else {\r\n      // console.log(\"Only the author can edit this post.\");\r\n      window.alert(\"Only the author can edit this post.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmitEditedQuestion = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const response = await axios.put(\r\n        `/api/community/${postId}`,\r\n        updatedQuestion,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setQuestion(updatedQuestion); // update the question state with the updated question\r\n      setShowEditModal(false); // hide the edit modal\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to submit edited question:\", error);\r\n    }\r\n  };\r\n  const handleDeleteQuestion = async () => {\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      try {\r\n        setIsLoading(true);\r\n        const token = parsedData.token;\r\n        await axios.delete(`/api/community/${postId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setIsLoading(false);\r\n        window.alert(\"Post deleted successfully\");\r\n        navigate(\"/community\");\r\n        // redirect the user to the community page or other appropriate page\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.error(\"Failed to delete question:\", error);\r\n        window.alert(\"Only admins can delete questions\");\r\n      }\r\n    } else {\r\n      console.log(\"Only the author can delete this post.\");\r\n      window.alert(\"Only admins can delete questions\");\r\n    }\r\n  };\r\n\r\n  const handleEditComment = (commentId, commentText) => {\r\n    setEditingCommentId(commentId);\r\n    setEditingCommentText(commentText);\r\n  };\r\n\r\n  const handleUpdateComment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const commentToUpdate = question.comments.find(\r\n        (comment) => comment._id === editingCommentId\r\n      );\r\n      const updatedComment = { ...commentToUpdate, content: editCommentText };\r\n      const updatedQuestion = { ...question };\r\n      const commentIndex = updatedQuestion.comments.findIndex(\r\n        (comment) => comment._id === editingCommentId\r\n      );\r\n      updatedQuestion.comments[commentIndex] = updatedComment;\r\n      setQuestion(updatedQuestion);\r\n      setEditingCommentId(null);\r\n      setEditCommentText(\"\");\r\n      localStorage.setItem(\r\n        `question_${postId}_comments`,\r\n        JSON.stringify(updatedQuestion.comments)\r\n      );\r\n      const response = await axios.put(\r\n        `/api/community/${postId}/comments/${editingCommentId}`,\r\n        updatedComment,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to update comment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const updatedQuestion = { ...question };\r\n      const commentIndex = updatedQuestion.comments.findIndex(\r\n        (comment) => comment._id === commentId\r\n      );\r\n      updatedQuestion.comments.splice(commentIndex, 1);\r\n      setQuestion(updatedQuestion);\r\n      localStorage.setItem(\r\n        `question_${postId}_comments`,\r\n        JSON.stringify(updatedQuestion.comments)\r\n      );\r\n      const response = await axios.delete(\r\n        `/api/community/${postId}/comments/${commentId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to delete comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"15px\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h2 style={{ color: \"#da4ea2\", display: \"flex\", alignItems: \"center\" }}>\r\n        <img\r\n          src=\"/Images/arrow.gif\"\r\n          alt=\"arrow\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n            borderRadius: \"50%\",\r\n          }}\r\n        />\r\n        {question.title}\r\n      </h2>\r\n      <div id=\"button-container\"></div>\r\n      <div\r\n        style={{\r\n          border: \"1px solid black\",\r\n          padding: \"15px\",\r\n          borderRadius: \"5px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <ReactQuill\r\n          value={question.content}\r\n          readOnly={true}\r\n          modules={{\r\n            toolbar: false,\r\n          }}\r\n        />\r\n        <span style={{ paddingBottom: \"7px\" }}>\r\n          <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n          {new Date(question.createdAt).toLocaleString()}\r\n        </span>\r\n      </div>\r\n      {question.author === id && (\r\n        <div>\r\n          <button\r\n            onClick={handleEditQuestion}\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"5px\",\r\n              backgroundColor: \"green\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              marginTop: \"10px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={handleDeleteQuestion}\r\n            style={{\r\n              display: \"inline-flex\",\r\n              padding: \"5px\",\r\n              backgroundColor: \"red\",\r\n              color: \"white\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              marginTop: \"10px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {showEditModal && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedQuestion.title}\r\n            onChange={(event) =>\r\n              setUpdatedQuestion({\r\n                ...updatedQuestion,\r\n                title: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <ReactQuill\r\n            value={updatedQuestion.content}\r\n            onChange={(value) =>\r\n              setUpdatedQuestion({ ...updatedQuestion, content: value })\r\n            }\r\n          />\r\n          <button onClick={handleSubmitEditedQuestion}>Save</button>\r\n          <button onClick={() => setShowEditModal(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      <h3>{question.comments.length} Answers</h3>\r\n\r\n      {question.comments.map((comment) => (\r\n        <div\r\n          key={comment._id} // Assign a unique key prop to each rendered comment\r\n          style={{\r\n            padding: \"15px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"black\",\r\n            margin: \"5px\",\r\n            borderWidth: \"1px\",\r\n            borderRadius: \"15px\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={comment.pic}\r\n              alt=\"profile\"\r\n              style={{\r\n                width: \"5%\",\r\n                height: \"auto\",\r\n                borderRadius: \"50%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n          </div>\r\n          <span style={{ paddingBottom: \"7px\" }}>\r\n            <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n            {new Date(comment.createdAt).toLocaleString()}\r\n          </span>\r\n          {comment.author === id && (\r\n            <div>\r\n              <button\r\n                onClick={() => handleEditComment(comment._id, comment.content)}\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  padding: \"5px\",\r\n                  backgroundColor: \"green\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"10px\",\r\n                  marginRight: \"10px\",\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => handleDeleteComment(comment._id)}\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  padding: \"5px\",\r\n                  backgroundColor: \"red\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"10px\",\r\n                  marginRight: \"10px\",\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          )}\r\n          {editingCommentId === comment._id && (\r\n            <div>\r\n              <textarea\r\n                className=\"edit-comment-textarea\"\r\n                value={editCommentText}\r\n                onChange={(e) => setEditCommentText(e.target.value)}\r\n              />\r\n              <button\r\n                onClick={handleUpdateComment}\r\n                style={{\r\n                  display: \"inline-flex\",\r\n                  padding: \"5px\",\r\n                  backgroundColor: \"green\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  marginTop: \"10px\",\r\n                  marginRight: \"10px\",\r\n                }}\r\n              >\r\n                Update comment\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <h2 style={{ color: \"#da4ea2\" }}>Add your Comment here</h2>\r\n        <ReactQuill\r\n          value={commentInput}\r\n          onChange={setCommentInput}\r\n          placeholder=\"Content\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n          }}\r\n          modules={{\r\n            toolbar: [\r\n              [{ header: [1, 2, false] }],\r\n              [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n              [\r\n                { list: \"ordered\" },\r\n                { list: \"bullet\" },\r\n                { indent: \"-1\" },\r\n                { indent: \"+1\" },\r\n              ],\r\n              [\"link\", \"image\"],\r\n              [\"clean\"],\r\n            ],\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          placeholder=\"Add a comment...\"\r\n          value={commentInput}\r\n          onChange={handleCommentInputChange}\r\n        />*/}\r\n        <button\r\n          onClick={handleSubmitComment}\r\n          style={{\r\n            backgroundColor: \"#da4ea2\",\r\n            color: \"white\",\r\n            padding: \"10px\",\r\n            borderRadius: \"5px\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          {isLoading ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}