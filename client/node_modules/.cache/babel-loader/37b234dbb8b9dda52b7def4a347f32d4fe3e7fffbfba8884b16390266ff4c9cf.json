{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\AskQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"react-quill/dist/quill.core.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskQuestion = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create request body\n    const requestBody = {\n      title: title,\n      content: content\n    };\n    try {\n      // Get the authentication token from wherever it's stored in your app\n      const storedData = localStorage.getItem(\"userInfo\"); // assuming it's stored in localStorage\n\n      // Parse the string back to an object\n      const parsedData = JSON.parse(storedData);\n\n      // Access the name value\n      const token = parsedData.token;\n\n      // Make POST request to backend API with token in headers and request body\n      const response = await axios.post(\"/api/community/askQuestion\", requestBody, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Handle successful post creation\n      //console.log(\"Post created successfully:\", response.data);\n\n      // Clear form fields\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      // Handle error\n      console.error(\"Error creating post:\", error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent,\n      placeholder: \"Content\",\n      modules: {\n        toolbar: [[{\n          header: [1, 2, false]\n        }], [\"bold\", \"italic\", \"underline\", \"strike\"], [\"blockquote\"], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }], [{\n          align: []\n        }], [{\n          color: []\n        }, {\n          background: []\n        }], [\"link\", \"image\"], [\"clean\"]]\n      },\n      theme: \"bubble\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AskQuestion, \"eiXkh+GEjRZ8Svxty8bnXm2rLL0=\");\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","axios","ReactQuill","jsxDEV","_jsxDEV","AskQuestion","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","requestBody","storedData","localStorage","getItem","parsedData","JSON","parse","token","response","post","headers","Authorization","error","console","data","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","modules","toolbar","header","list","align","color","background","theme","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/AskQuestion.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport \"react-quill/dist/quill.core.css\";\r\n\r\nconst AskQuestion = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create request body\r\n    const requestBody = {\r\n      title: title,\r\n      content: content,\r\n    };\r\n\r\n    try {\r\n      // Get the authentication token from wherever it's stored in your app\r\n      const storedData = localStorage.getItem(\"userInfo\"); // assuming it's stored in localStorage\r\n\r\n      // Parse the string back to an object\r\n      const parsedData = JSON.parse(storedData);\r\n\r\n      // Access the name value\r\n      const token = parsedData.token;\r\n\r\n      // Make POST request to backend API with token in headers and request body\r\n      const response = await axios.post(\r\n        \"/api/community/askQuestion\",\r\n        requestBody,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      // Handle successful post creation\r\n      //console.log(\"Post created successfully:\", response.data);\r\n\r\n      // Clear form fields\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n    } catch (error) {\r\n      // Handle error\r\n      console.error(\"Error creating post:\", error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Render form fields for title */}\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        placeholder=\"Title\"\r\n      />\r\n\r\n      {/* Render description section */}\r\n      <ReactQuill\r\n        value={content}\r\n        onChange={setContent}\r\n        placeholder=\"Content\"\r\n        modules={{\r\n          toolbar: [\r\n            [{ header: [1, 2, false] }],\r\n            [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n            [\"blockquote\"],\r\n            [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n            [{ align: [] }],\r\n            [{ color: [] }, { background: [] }],\r\n            [\"link\", \"image\"],\r\n            [\"clean\"],\r\n          ],\r\n        }}\r\n        theme=\"bubble\"\r\n      />\r\n\r\n      {/* Render submit button */}\r\n      <button type=\"submit\">Ask</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}