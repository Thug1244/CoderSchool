{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\QuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    postId\n  } = useParams();\n  const storedData = localStorage.getItem(\"userInfo\");\n  const parsedData = JSON.parse(storedData);\n  const [newComment, setNewComment] = useState(\"\");\n  const id = parsedData._id;\n  const [updatedQuestion, setUpdatedQuestion] = useState(null); // new state variable\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmitComment = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const pic = parsedData.pic;\n      const newComment = {\n        content: commentInput,\n        pic: pic\n      };\n      const updatedQuestion = {\n        ...question\n      };\n      updatedQuestion.comments.push(newComment);\n      setQuestion(updatedQuestion);\n      console.log(newComment);\n      setCommentInput(\"\");\n      localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n      const response = await axios.post(`/api/community/${postId}/comments`, newComment, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      fetchQuestion();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to submit comment:\", error);\n    }\n  };\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get(`/api/community/${postId}`);\n      setQuestion(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch question:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n  }, [postId]);\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  const handleCommentInputChange = event => {\n    setCommentInput(event.target.value);\n  };\n  const handleEditQuestion = () => {\n    // check if the user is the author of the post\n    if (question.author === id) {\n      setShowEditModal(true);\n      setUpdatedQuestion({\n        ...question\n      }); // create a copy of the original question to modify\n    } else {\n      console.log(\"Only the author can edit this post.\");\n      window.alert(\"Only the author can edit this post.\");\n    }\n  };\n  const handleSubmitEditedQuestion = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const response = await axios.put(`/api/community/${postId}`, updatedQuestion, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setQuestion(updatedQuestion); // update the question state with the updated question\n      setShowEditModal(false); // hide the edit modal\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to submit edited question:\", error);\n    }\n  };\n  const handleDeleteQuestion = async () => {\n    // check if the user is the author of the post\n    if (question.author === id) {\n      try {\n        setIsLoading(true);\n        const token = parsedData.token;\n        await axios.delete(`/api/community/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsLoading(false);\n        window.alert(\"Post deleted successfully\");\n        navigate(\"/community\");\n        // redirect the user to the community page or other appropriate page\n      } catch (error) {\n        setIsLoading(false);\n        console.error(\"Failed to delete question:\", error);\n        window.alert(\"Only admins can delete questions\");\n      }\n    } else {\n      console.log(\"Only the author can delete this post.\");\n      window.alert(\"Only admins can delete questions\");\n    }\n  };\n\n  // Comment section\n\n  const handleEditComment = comment => {\n    setEditingCommentId(comment._id);\n    setEditingCommentText(comment.content);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const updatedComment = {\n        ...question.comments.find(c => c._id === editingCommentId),\n        content: editingCommentText\n      };\n      const updatedQuestion = {\n        ...question,\n        comments: question.comments.map(c => c._id === editingCommentId ? updatedComment : c)\n      };\n      setQuestion(updatedQuestion);\n      localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n      const response = await axios.put(`/api/community/${postId}/comments/${editingCommentId}`, updatedComment, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setEditingCommentId(null);\n      setEditingCommentText(\"\");\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to update comment:\", error);\n    }\n  };\n  const handleDeleteComment = async comment => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        setIsLoading(true);\n        const token = parsedData.token;\n        const updatedQuestion = {\n          ...question,\n          comments: question.comments.filter(c => c._id !== comment._id)\n        };\n        setQuestion(updatedQuestion);\n        localStorage.setItem(`question_${postId}_comments`, JSON.stringify(updatedQuestion.comments));\n        const response = await axios.delete(`/api/community/${postId}/comments/${comment._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        console.error(\"Failed to delete comment:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"15px\",\n      padding: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#da4ea2\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Images/arrow.gif\",\n        alt: \"arrow\",\n        style: {\n          marginRight: \"10px\",\n          width: \"40px\",\n          height: \"40px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), question.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        padding: \"15px\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: question.content,\n        readOnly: true,\n        modules: {\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \" \", new Date(question.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditQuestion,\n      children: \"Edit Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteQuestion,\n      children: \"Delete Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedQuestion.title,\n        onChange: event => setUpdatedQuestion({\n          ...updatedQuestion,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: updatedQuestion.content,\n        onChange: value => setUpdatedQuestion({\n          ...updatedQuestion,\n          content: value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitEditedQuestion,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [question.comments.length, \" Answers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), question.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      // Assign a unique key prop to each rendered comment\n      style: {\n        padding: \"15px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        margin: \"5px\",\n        borderWidth: \"1px\",\n        borderRadius: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.pic,\n          alt: \"profile\",\n          style: {\n            width: \"5%\",\n            height: \"auto\",\n            borderRadius: \"50%\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditComment(comment),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteComment(comment),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), \" \", new Date(comment.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#da4ea2\"\n        },\n        children: \"Add your Comment here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: commentInput,\n        onChange: setCommentInput,\n        placeholder: \"Content\",\n        style: {\n          backgroundColor: \"white\"\n        },\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n            list: \"ordered\"\n          }, {\n            list: \"bullet\"\n          }, {\n            indent: \"-1\"\n          }, {\n            indent: \"+1\"\n          }], [\"link\", \"image\"], [\"clean\"]]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), parsedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentInput,\n          onChange: handleCommentInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitComment,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitComment,\n        disabled: !commentInput,\n        style: {\n          backgroundColor: \"#da4ea2\",\n          color: \"white\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: isLoading ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"4e3pFfxzxkeH7F7PfLT7L3dLtCA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","ReactQuill","jsxDEV","_jsxDEV","QuestionDetails","_s","question","setQuestion","commentInput","setCommentInput","isLoading","setIsLoading","postId","storedData","localStorage","getItem","parsedData","JSON","parse","newComment","setNewComment","id","_id","updatedQuestion","setUpdatedQuestion","showEditModal","setShowEditModal","editingCommentId","setEditingCommentId","editingCommentText","setEditingCommentText","navigate","handleSubmitComment","token","pic","content","comments","push","console","log","setItem","stringify","response","post","headers","Authorization","fetchQuestion","error","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCommentInputChange","event","target","value","handleEditQuestion","author","window","alert","handleSubmitEditedQuestion","put","handleDeleteQuestion","delete","handleEditComment","comment","handleUpdateComment","updatedComment","find","c","map","handleDeleteComment","confirm","filter","style","backgroundColor","borderRadius","padding","color","display","alignItems","src","alt","marginRight","width","height","title","border","marginBottom","readOnly","modules","toolbar","paddingBottom","Date","createdAt","toLocaleString","onClick","type","onChange","length","borderStyle","borderColor","margin","borderWidth","dangerouslySetInnerHTML","__html","marginTop","placeholder","header","list","indent","disabled","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/QuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nconst QuestionDetails = () => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { postId } = useParams();\r\n  const storedData = localStorage.getItem(\"userInfo\");\r\n  const parsedData = JSON.parse(storedData);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const id = parsedData._id;\r\n  const [updatedQuestion, setUpdatedQuestion] = useState(null); // new state variable\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editingCommentId, setEditingCommentId] = useState(null);\r\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmitComment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const pic = parsedData.pic;\r\n      const newComment = { content: commentInput, pic: pic };\r\n      const updatedQuestion = { ...question };\r\n      updatedQuestion.comments.push(newComment);\r\n      setQuestion(updatedQuestion);\r\n      console.log(newComment);\r\n      setCommentInput(\"\");\r\n      localStorage.setItem(\r\n        `question_${postId}_comments`,\r\n        JSON.stringify(updatedQuestion.comments)\r\n      );\r\n      const response = await axios.post(\r\n        `/api/community/${postId}/comments`,\r\n        newComment,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      fetchQuestion();\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to submit comment:\", error);\r\n    }\r\n  };\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/community/${postId}`);\r\n      setQuestion(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch question:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, [postId]);\r\n  if (!question) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const handleCommentInputChange = (event) => {\r\n    setCommentInput(event.target.value);\r\n  };\r\n  const handleEditQuestion = () => {\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      setShowEditModal(true);\r\n      setUpdatedQuestion({ ...question }); // create a copy of the original question to modify\r\n    } else {\r\n      console.log(\"Only the author can edit this post.\");\r\n      window.alert(\"Only the author can edit this post.\");\r\n    }\r\n  };\r\n  const handleSubmitEditedQuestion = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const response = await axios.put(\r\n        `/api/community/${postId}`,\r\n        updatedQuestion,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setQuestion(updatedQuestion); // update the question state with the updated question\r\n      setShowEditModal(false); // hide the edit modal\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to submit edited question:\", error);\r\n    }\r\n  };\r\n  const handleDeleteQuestion = async () => {\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      try {\r\n        setIsLoading(true);\r\n        const token = parsedData.token;\r\n        await axios.delete(`/api/community/${postId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setIsLoading(false);\r\n        window.alert(\"Post deleted successfully\");\r\n        navigate(\"/community\");\r\n        // redirect the user to the community page or other appropriate page\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.error(\"Failed to delete question:\", error);\r\n        window.alert(\"Only admins can delete questions\");\r\n      }\r\n    } else {\r\n      console.log(\"Only the author can delete this post.\");\r\n      window.alert(\"Only admins can delete questions\");\r\n    }\r\n  };\r\n\r\n  // Comment section\r\n\r\n  const handleEditComment = (comment) => {\r\n    setEditingCommentId(comment._id);\r\n    setEditingCommentText(comment.content);\r\n  };\r\n\r\n  const handleUpdateComment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const updatedComment = {\r\n        ...question.comments.find((c) => c._id === editingCommentId),\r\n        content: editingCommentText,\r\n      };\r\n      const updatedQuestion = {\r\n        ...question,\r\n        comments: question.comments.map((c) =>\r\n          c._id === editingCommentId ? updatedComment : c\r\n        ),\r\n      };\r\n      setQuestion(updatedQuestion);\r\n      localStorage.setItem(\r\n        `question_${postId}_comments`,\r\n        JSON.stringify(updatedQuestion.comments)\r\n      );\r\n      const response = await axios.put(\r\n        `/api/community/${postId}/comments/${editingCommentId}`,\r\n        updatedComment,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setEditingCommentId(null);\r\n      setEditingCommentText(\"\");\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to update comment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (comment) => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        setIsLoading(true);\r\n        const token = parsedData.token;\r\n        const updatedQuestion = {\r\n          ...question,\r\n          comments: question.comments.filter((c) => c._id !== comment._id),\r\n        };\r\n        setQuestion(updatedQuestion);\r\n        localStorage.setItem(\r\n          `question_${postId}_comments`,\r\n          JSON.stringify(updatedQuestion.comments)\r\n        );\r\n        const response = await axios.delete(\r\n          `/api/community/${postId}/comments/${comment._id}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.error(\"Failed to delete comment:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"15px\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h2 style={{ color: \"#da4ea2\", display: \"flex\", alignItems: \"center\" }}>\r\n        <img\r\n          src=\"/Images/arrow.gif\"\r\n          alt=\"arrow\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n            borderRadius: \"50%\",\r\n          }}\r\n        />\r\n        {question.title}\r\n      </h2>\r\n\r\n      <div id=\"button-container\"></div>\r\n      <div\r\n        style={{\r\n          border: \"1px solid black\",\r\n          padding: \"15px\",\r\n          borderRadius: \"5px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <ReactQuill\r\n          value={question.content}\r\n          readOnly={true}\r\n          modules={{\r\n            toolbar: false,\r\n          }}\r\n        />\r\n        <span style={{ paddingBottom: \"7px\" }}>\r\n          <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n          {new Date(question.createdAt).toLocaleString()}\r\n        </span>\r\n      </div>\r\n      <button onClick={handleEditQuestion}>Edit Question</button>\r\n      <button onClick={handleDeleteQuestion}>Delete Question</button>\r\n      {showEditModal && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedQuestion.title}\r\n            onChange={(event) =>\r\n              setUpdatedQuestion({\r\n                ...updatedQuestion,\r\n                title: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <ReactQuill\r\n            value={updatedQuestion.content}\r\n            onChange={(value) =>\r\n              setUpdatedQuestion({ ...updatedQuestion, content: value })\r\n            }\r\n          />\r\n          <button onClick={handleSubmitEditedQuestion}>Save</button>\r\n          <button onClick={() => setShowEditModal(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      <h3>{question.comments.length} Answers</h3>\r\n      {question.comments.map((comment) => (\r\n        <div\r\n          key={comment._id} // Assign a unique key prop to each rendered comment\r\n          style={{\r\n            padding: \"15px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"black\",\r\n            margin: \"5px\",\r\n            borderWidth: \"1px\",\r\n            borderRadius: \"15px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <img\r\n              src={comment.pic}\r\n              alt=\"profile\"\r\n              style={{\r\n                width: \"5%\",\r\n                height: \"auto\",\r\n                borderRadius: \"50%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n          </div>\r\n          <button onClick={() => handleEditComment(comment)}>Edit</button>\r\n          <button onClick={() => handleDeleteComment(comment)}>Delete</button>\r\n          <span style={{ paddingBottom: \"7px\" }}>\r\n            <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n            {new Date(comment.createdAt).toLocaleString()}\r\n          </span>\r\n        </div>\r\n      ))}\r\n      <div\r\n        style={{\r\n          marginTop: \"20px\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h2 style={{ color: \"#da4ea2\" }}>Add your Comment here</h2>\r\n        <ReactQuill\r\n          value={commentInput}\r\n          onChange={setCommentInput}\r\n          placeholder=\"Content\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n          }}\r\n          modules={{\r\n            toolbar: [\r\n              [{ header: [1, 2, false] }],\r\n              [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n              [\r\n                { list: \"ordered\" },\r\n                { list: \"bullet\" },\r\n                { indent: \"-1\" },\r\n                { indent: \"+1\" },\r\n              ],\r\n              [\"link\", \"image\"],\r\n              [\"clean\"],\r\n            ],\r\n          }}\r\n        />\r\n        {parsedData && (\r\n          <div>\r\n            <textarea\r\n              value={commentInput}\r\n              onChange={handleCommentInputChange}\r\n            />\r\n            <button onClick={handleSubmitComment}>Submit</button>\r\n          </div>\r\n        )}\r\n        <button\r\n          onClick={handleSubmitComment}\r\n          disabled={!commentInput}\r\n          style={{\r\n            backgroundColor: \"#da4ea2\",\r\n            color: \"white\",\r\n            padding: \"10px\",\r\n            borderRadius: \"5px\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          {isLoading ? \"Submitting...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default QuestionDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}