{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport Box from \"@mui/material/Box\";\nimport SingleChat from \"./SingleChat\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    selectedChat\n  } = ChatState();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      xs: selectedChat ? \"flex\" : \"none\",\n      md: \"flex\"\n    },\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    padding: \"3px\",\n    color: \"black\",\n    width: \"100%\",\n    marginLeft: isMobile ? \"0px\" : \"50px\",\n    borderRadius: \"10px\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(SingleChat, {\n      fetchAgain: fetchAgain,\n      setFetchAgain: setFetchAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"7khsyUHgctuHIPa2/KlDS6LcnT0=\", false, function () {\n  return [useMediaQuery];\n});\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","ChatState","Box","SingleChat","useMediaQuery","jsxDEV","_jsxDEV","ChatBox","_ref","_s","fetchAgain","setFetchAgain","selectedChat","isMobile","display","xs","md","alignItems","flexDirection","backgroundColor","padding","color","width","marginLeft","borderRadius","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/ChatBox.js"],"sourcesContent":["import React from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\n\r\nconst ChatBox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n\r\n  return (\r\n    <Box\r\n      display={{\r\n        xs: selectedChat ? \"flex\" : \"none\",\r\n        md: \"flex\",\r\n      }}\r\n      alignItems=\"center\"\r\n      flexDirection=\"column\"\r\n      backgroundColor=\"white\"\r\n      padding=\"3px\"\r\n      color=\"black\"\r\n      width=\"100%\"\r\n      marginLeft={isMobile ? \"0px\" : \"50px\"}\r\n      borderRadius=\"10px\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,aAAa,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAC5C,MAAM;IAAEI;EAAa,CAAC,GAAGX,SAAS,EAAE;EACpC,MAAMY,QAAQ,GAAGT,aAAa,CAAC,mBAAmB,CAAC;EAEnD,oBACEE,OAAA,CAACJ,GAAG;IACFY,OAAO,EAAE;MACPC,EAAE,EAAEH,YAAY,GAAG,MAAM,GAAG,MAAM;MAClCI,EAAE,EAAE;IACN,CAAE;IACFC,UAAU,EAAC,QAAQ;IACnBC,aAAa,EAAC,QAAQ;IACtBC,eAAe,EAAC,OAAO;IACvBC,OAAO,EAAC,KAAK;IACbC,KAAK,EAAC,OAAO;IACbC,KAAK,EAAC,MAAM;IACZC,UAAU,EAAEV,QAAQ,GAAG,KAAK,GAAG,MAAO;IACtCW,YAAY,EAAC,MAAM;IACnBC,cAAc,EAAC,QAAQ;IAAAC,QAAA,eAEvBpB,OAAA,CAACH,UAAU;MAACO,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEV,CAAC;AAACrB,EAAA,CAvBIF,OAAO;EAAA,QAEMH,aAAa;AAAA;AAAA2B,EAAA,GAF1BxB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}