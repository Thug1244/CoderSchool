{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\QuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false); // new state variable\n  const [updatedQuestion, setUpdatedQuestion] = useState(null); // new state variable\n  const [newComment, setNewComment] = useState(\"\"); // new state variable\n  const {\n    postId\n  } = useParams();\n  const storedData = localStorage.getItem(\"userInfo\");\n  const parsedData = JSON.parse(storedData);\n  const id = parsedData._id;\n  const navigate = useNavigate();\n  const handleCommentInputChange = event => {\n    setCommentInput(event.target.value);\n  };\n  const handleEditQuestion = () => {\n    //  console.log(id);\n    //  console.log(question.author);\n    // check if the user is the author of the post\n    if (question.author === id) {\n      setShowEditModal(true);\n      setUpdatedQuestion({\n        ...question\n      }); // create a copy of the original question to modify\n    } else {\n      console.log(\"Only the author can edit this post.\");\n      window.alert(\"Only the author can edit this post.\");\n    }\n  };\n  const handleSubmitEditedQuestion = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const response = await axios.put(`/api/community/${postId}`, updatedQuestion, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setQuestion(updatedQuestion); // update the question state with the updated question\n      setShowEditModal(false); // hide the edit modal\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to submit edited question:\", error);\n    }\n  };\n  const handleDeleteQuestion = async () => {\n    // check if the user is the author of the post\n    if (question.author === id) {\n      try {\n        setIsLoading(true);\n        const token = parsedData.token;\n        await axios.delete(`/api/community/${postId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsLoading(false);\n        window.alert(\"Post deleted successfully\");\n        navigate(\"/community\");\n        // redirect the user to the community page or other appropriate page\n      } catch (error) {\n        setIsLoading(false);\n        console.error(\"Failed to delete question:\", error);\n      }\n    } else {\n      console.log(\"Only the author can delete this post.\");\n    }\n  };\n  const handlePostComment = async () => {\n    try {\n      setIsLoading(true);\n      const token = parsedData.token;\n      const response = await axios.post(`/api/community/${postId}/comments`, {\n        content: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const newCommentData = response.data;\n      setQuestion({\n        ...question,\n        comments: [...question.comments, newCommentData]\n      });\n      setNewComment(\"\");\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.error(\"Failed to post comment:\", error);\n    }\n  };\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get(`/api/community/${postId}`);\n      setQuestion(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch question:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n  if (isLoading || !question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: \"15px\",\n      padding: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#da4ea2\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Images/arrow.gif\",\n        alt: \"arrow\",\n        style: {\n          marginRight: \"10px\",\n          width: \"40px\",\n          height: \"40px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), question.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        padding: \"15px\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: question.content,\n        readOnly: true,\n        modules: {\n          toolbar: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), \" \", new Date(question.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditQuestion,\n      children: \"Edit Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteQuestion,\n      children: \"Delete Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedQuestion.title,\n        onChange: event => setUpdatedQuestion({\n          ...updatedQuestion,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: updatedQuestion.content,\n        onChange: value => setUpdatedQuestion({\n          ...updatedQuestion,\n          content: value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitEditedQuestion,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEditModal(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [question.comments.length, \" Answers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), question.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      // Assign a unique key prop to each rendered comment\n      style: {\n        padding: \"15px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        margin: \"5px\",\n        borderWidth: \"1px\",\n        borderRadius: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.pic,\n          alt: \"profile\",\n          style: {\n            width: \"5%\",\n            height: \"auto\",\n            borderRadius: \"50%\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingBottom: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: \"#da4ea2\"\n          },\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), \" \", new Date(comment.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Content\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      modules: {\n        toolbar: [[{\n          header: [1, 2, false]\n        }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }, {\n          indent: \"-1\"\n        }, {\n          indent: \"+1\"\n        }], [\"link\", \"image\"], [\"clean\"]]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePostComment,\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"sO+d2psl+XiPEbtvIfJcbPN+UTw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useParams","ReactQuill","jsxDEV","_jsxDEV","QuestionDetails","_s","question","setQuestion","commentInput","setCommentInput","isLoading","setIsLoading","showEditModal","setShowEditModal","updatedQuestion","setUpdatedQuestion","newComment","setNewComment","postId","storedData","localStorage","getItem","parsedData","JSON","parse","id","_id","navigate","handleCommentInputChange","event","target","value","handleEditQuestion","author","console","log","window","alert","handleSubmitEditedQuestion","token","response","put","headers","Authorization","error","handleDeleteQuestion","delete","handlePostComment","post","content","newCommentData","data","comments","fetchQuestion","get","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","borderRadius","padding","color","display","alignItems","src","alt","marginRight","width","height","title","border","marginBottom","readOnly","modules","toolbar","paddingBottom","Date","createdAt","toLocaleString","onClick","type","onChange","length","map","comment","borderStyle","borderColor","margin","borderWidth","pic","dangerouslySetInnerHTML","__html","e","placeholder","header","list","indent","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/QuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst QuestionDetails = () => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false); // new state variable\r\n  const [updatedQuestion, setUpdatedQuestion] = useState(null); // new state variable\r\n  const [newComment, setNewComment] = useState(\"\"); // new state variable\r\n  const { postId } = useParams();\r\n  const storedData = localStorage.getItem(\"userInfo\");\r\n  const parsedData = JSON.parse(storedData);\r\n  const id = parsedData._id;\r\n  const navigate = useNavigate();\r\n\r\n  const handleCommentInputChange = (event) => {\r\n    setCommentInput(event.target.value);\r\n  };\r\n\r\n  const handleEditQuestion = () => {\r\n    //  console.log(id);\r\n    //  console.log(question.author);\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      setShowEditModal(true);\r\n      setUpdatedQuestion({ ...question }); // create a copy of the original question to modify\r\n    } else {\r\n      console.log(\"Only the author can edit this post.\");\r\n      window.alert(\"Only the author can edit this post.\");\r\n    }\r\n  };\r\n  const handleSubmitEditedQuestion = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const response = await axios.put(\r\n        `/api/community/${postId}`,\r\n        updatedQuestion,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setQuestion(updatedQuestion); // update the question state with the updated question\r\n      setShowEditModal(false); // hide the edit modal\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to submit edited question:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuestion = async () => {\r\n    // check if the user is the author of the post\r\n    if (question.author === id) {\r\n      try {\r\n        setIsLoading(true);\r\n        const token = parsedData.token;\r\n        await axios.delete(`/api/community/${postId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setIsLoading(false);\r\n        window.alert(\"Post deleted successfully\");\r\n        navigate(\"/community\");\r\n        // redirect the user to the community page or other appropriate page\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.error(\"Failed to delete question:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"Only the author can delete this post.\");\r\n    }\r\n  };\r\n\r\n  const handlePostComment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = parsedData.token;\r\n      const response = await axios.post(\r\n        `/api/community/${postId}/comments`,\r\n        { content: newComment },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const newCommentData = response.data;\r\n      setQuestion({\r\n        ...question,\r\n        comments: [...question.comments, newCommentData],\r\n      });\r\n      setNewComment(\"\");\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.error(\"Failed to post comment:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/community/${postId}`);\r\n      setQuestion(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch question:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, []);\r\n\r\n  if (isLoading || !question) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"15px\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h2 style={{ color: \"#da4ea2\", display: \"flex\", alignItems: \"center\" }}>\r\n        <img\r\n          src=\"/Images/arrow.gif\"\r\n          alt=\"arrow\"\r\n          style={{\r\n            marginRight: \"10px\",\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n            borderRadius: \"50%\",\r\n          }}\r\n        />\r\n        {question.title}\r\n      </h2>\r\n      <div\r\n        style={{\r\n          border: \"1px solid black\",\r\n          padding: \"15px\",\r\n          borderRadius: \"5px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <ReactQuill\r\n          value={question.content}\r\n          readOnly={true}\r\n          modules={{\r\n            toolbar: false,\r\n          }}\r\n        />\r\n        <span style={{ paddingBottom: \"7px\" }}>\r\n          <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n          {new Date(question.createdAt).toLocaleString()}\r\n        </span>\r\n      </div>\r\n      <button onClick={handleEditQuestion}>Edit Question</button>\r\n      <button onClick={handleDeleteQuestion}>Delete Question</button>\r\n      {showEditModal && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedQuestion.title}\r\n            onChange={(event) =>\r\n              setUpdatedQuestion({\r\n                ...updatedQuestion,\r\n                title: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <ReactQuill\r\n            value={updatedQuestion.content}\r\n            onChange={(value) =>\r\n              setUpdatedQuestion({ ...updatedQuestion, content: value })\r\n            }\r\n          />\r\n          <button onClick={handleSubmitEditedQuestion}>Save</button>\r\n          <button onClick={() => setShowEditModal(false)}>Cancel</button>\r\n        </div>\r\n      )}\r\n      <h3>{question.comments.length} Answers</h3>\r\n      {question.comments.map((comment) => (\r\n        <div\r\n          key={comment._id} // Assign a unique key prop to each rendered comment\r\n          style={{\r\n            padding: \"15px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"black\",\r\n            margin: \"5px\",\r\n            borderWidth: \"1px\",\r\n            borderRadius: \"15px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <img\r\n              src={comment.pic}\r\n              alt=\"profile\"\r\n              style={{\r\n                width: \"5%\",\r\n                height: \"auto\",\r\n                borderRadius: \"50%\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <div dangerouslySetInnerHTML={{ __html: comment.content }}></div>\r\n          </div>\r\n          <span style={{ paddingBottom: \"7px\" }}>\r\n            <b style={{ color: \"#da4ea2\" }}>Date:</b>{\" \"}\r\n            {new Date(comment.createdAt).toLocaleString()}\r\n          </span>\r\n        </div>\r\n      ))}\r\n      <ReactQuill\r\n        value={newComment}\r\n        onChange={(e) => setNewComment(e.target.value)}\r\n        placeholder=\"Content\"\r\n        style={{\r\n          backgroundColor: \"white\",\r\n        }}\r\n        modules={{\r\n          toolbar: [\r\n            [{ header: [1, 2, false] }],\r\n            [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n            [\r\n              { list: \"ordered\" },\r\n              { list: \"bullet\" },\r\n              { indent: \"-1\" },\r\n              { indent: \"+1\" },\r\n            ],\r\n            [\"link\", \"image\"],\r\n            [\"clean\"],\r\n          ],\r\n        }}\r\n      />\r\n\r\n      <div>\r\n        <button onClick={handlePostComment}>Post Comment</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}