{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\QuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const response = await axios.get(`/api/community/${postId}`);\n        setQuestion(response.data.question);\n      } catch (error) {\n        console.error(\"Failed to fetch question:\", error);\n      }\n    };\n    fetchQuestion();\n  }, [postId]);\n  const handleAddComment = async content => {\n    try {\n      const response = await axios.post(`/api/community/${postId}/comments`, {\n        content\n      });\n      // Fetch the updated post object after adding a comment\n      const updatedPost = await axios.get(`/api/community/${postId}`);\n      setQuestion(updatedPost.data.question);\n    } catch (error) {\n      console.error(\"Failed to add comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.content\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddComment(\"New comment\"),\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"jkzQ0biZ4GnZGnzTQ9yw0/I6d2s=\");\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuestionDetails","_ref","_s","postId","question","setQuestion","fetchQuestion","response","get","data","error","console","handleAddComment","content","post","updatedPost","children","title","fileName","_jsxFileName","lineNumber","columnNumber","comments","map","comment","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/QuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst QuestionDetails = ({ postId }) => {\r\n  const [question, setQuestion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestion = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/community/${postId}`);\r\n        setQuestion(response.data.question);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch question:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuestion();\r\n  }, [postId]);\r\n\r\n  const handleAddComment = async (content) => {\r\n    try {\r\n      const response = await axios.post(`/api/community/${postId}/comments`, {\r\n        content,\r\n      });\r\n      // Fetch the updated post object after adding a comment\r\n      const updatedPost = await axios.get(`/api/community/${postId}`);\r\n      setQuestion(updatedPost.data.question);\r\n    } catch (error) {\r\n      console.error(\"Failed to add comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {question && (\r\n        <div>\r\n          <h1>{question.title}</h1>\r\n          <p>{question.content}</p>\r\n          <h3>Comments:</h3>\r\n          <ul>\r\n            {question.comments.map((comment) => (\r\n              <li key={comment._id}>{comment.content}</li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={() => handleAddComment(\"New comment\")}>\r\n            Add Comment\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,kBAAiBL,MAAO,EAAC,CAAC;QAC5DE,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACL,QAAQ,CAAC;MACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,aAAa,EAAE;EACjB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMS,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IAC1C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACiB,IAAI,CAAE,kBAAiBX,MAAO,WAAU,EAAE;QACrEU;MACF,CAAC,CAAC;MACF;MACA,MAAME,WAAW,GAAG,MAAMlB,KAAK,CAACW,GAAG,CAAE,kBAAiBL,MAAO,EAAC,CAAC;MAC/DE,WAAW,CAACU,WAAW,CAACN,IAAI,CAACL,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAiB,QAAA,EACGZ,QAAQ,iBACPL,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKZ,QAAQ,CAACa;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBtB,OAAA;QAAAiB,QAAA,EAAIZ,QAAQ,CAACS;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzBtB,OAAA;QAAAiB,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBtB,OAAA;QAAAiB,QAAA,EACGZ,QAAQ,CAACkB,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC7BzB,OAAA;UAAAiB,QAAA,EAAuBQ,OAAO,CAACX;QAAO,GAA7BW,OAAO,CAACC,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACLtB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,aAAa,CAAE;QAAAI,QAAA,EAAC;MAExD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACnB,EAAA,CAhDIF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAkDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}