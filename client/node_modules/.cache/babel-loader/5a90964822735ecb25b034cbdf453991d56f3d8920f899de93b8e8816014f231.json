{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Authentication\\\\ReistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [cpassword, setCpassword] = useState();\n  const [pic, setPic] = useState();\n  const [emailError, setEmailError] = useState(\"\");\n  const postDetails = pic => {};\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate email format\n    const regex = /^[a-z0-9](\\.?[a-z0-9]){5,}@g(oogle)?mail\\.com$/;\n    if (!regex.test(email)) {\n      setEmailError(\"Please enter a valid Gmail address.\");\n      return;\n    } else {\n      setEmailError(\"\");\n    }\n\n    // Submit form if all validations pass\n    submitHandler();\n  };\n  const submitHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't have an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./Images/signup.png\",\n        alt: \"Signupimage\",\n        className: \"loginsignupimage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        id: \"register-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          id: \"username\",\n          autoComplete: \"off\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"abc@gmail.com\",\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          id: \"email\",\n          autoComplete: \"off\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"at least 8 characters, including at least 1 letter and 1 number\",\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          id: \"password\",\n          autoComplete: \"off\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cpassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"cpassword\",\n          type: \"password\",\n          value: cpassword,\n          id: \"cpassword\",\n          autoComplete: \"off\",\n          onChange: e => setCpassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pic\",\n          children: \"Upload Your Profile Picture:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"profilePicture\",\n          type: \"file\",\n          id: \"file\",\n          value: pic,\n          accept: \"image/*\",\n          onChange: e => postDetails(e.target.files[0]),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"secandorybutton\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraph\",\n          children: [\"Already have an Account?\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"login-signup-toggle\",\n            to: \"/login\",\n            children: \"Login Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"KBGBYaSXs+YnORWC67D7KVgQM7A=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","NavLink","jsxDEV","_jsxDEV","RegistrationForm","_s","name","setName","email","setEmail","password","setPassword","cpassword","setCpassword","pic","setPic","emailError","setEmailError","postDetails","handleSubmit","e","preventDefault","regex","test","submitHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","method","id","onSubmit","htmlFor","type","autoComplete","value","onChange","target","required","placeholder","accept","files","to","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Authentication/ReistrationForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nconst RegistrationForm = () => {\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [cpassword, setCpassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [emailError, setEmailError] = useState(\"\");\r\n\r\n  const postDetails = (pic) => {};\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate email format\r\n    const regex = /^[a-z0-9](\\.?[a-z0-9]){5,}@g(oogle)?mail\\.com$/;\r\n    if (!regex.test(email)) {\r\n      setEmailError(\"Please enter a valid Gmail address.\");\r\n      return;\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n\r\n    // Submit form if all validations pass\r\n    submitHandler();\r\n  };\r\n\r\n  const submitHandler = () => {};\r\n\r\n  return (\r\n    <div className=\"login-signup-main\">\r\n      <h2>Don't have an Account</h2>\r\n      <h2>Signup Now</h2>\r\n      <div className=\"card\">\r\n        <img\r\n          src=\"./Images/signup.png\"\r\n          alt=\"Signupimage\"\r\n          className=\"loginsignupimage\"\r\n        />\r\n        <form method=\"POST\" id=\"register-form\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            id=\"username\"\r\n            autoComplete=\"off\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <br />\r\n\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"abc@gmail.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            id=\"email\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          {emailError && <div className=\"error\">{emailError}</div>}\r\n          <br />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            placeholder=\"at least 8 characters, including at least 1 letter and 1 number\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            id=\"password\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <br />\r\n          <label htmlFor=\"cpassword\">Confirm Password:</label>\r\n          <input\r\n            name=\"cpassword\"\r\n            type=\"password\"\r\n            value={cpassword}\r\n            id=\"cpassword\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setCpassword(e.target.value)}\r\n            required\r\n          />\r\n          <br />\r\n          <label htmlFor=\"pic\">Upload Your Profile Picture:</label>\r\n          <input\r\n            name=\"profilePicture\"\r\n            type=\"file\"\r\n            id=\"file\"\r\n            value={pic}\r\n            accept=\"image/*\"\r\n            onChange={(e) => postDetails(e.target.files[0])}\r\n            required\r\n          />\r\n          <br />\r\n\r\n          <button type=\"submit\" className=\"secandorybutton\">\r\n            Sign Up\r\n          </button>\r\n          <p className=\"paragraph\">\r\n            Already have an Account?{\" \"}\r\n            <NavLink className=\"login-signup-toggle\" to=\"/login\">\r\n              Login Now\r\n            </NavLink>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}