{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\SingleChat.js\";\nimport React from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport Box from \"@mui/material/Box\";\nimport CropSquareIcon from \"@mui/icons-material/CropSquare\";\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = _ref => {\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CropSquareIcon, {\n        style: {\n          display: \"flex\"\n        },\n        icon: /*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 19\n        }, this),\n        onClick: setSelectedChat(\"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: selectedChat.chatName.toUpperCase()\n      }, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Click on the user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","ChatState","Box","CropSquareIcon","ArrowCircleLeftIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleChat","_ref","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","children","style","display","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isGroupChat","chatName","toUpperCase","alignItems","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/SingleChat.js"],"sourcesContent":["import React from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CropSquareIcon from \"@mui/icons-material/CropSquare\";\r\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const { user, selectedChat, setSelectedChat } = ChatState();\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <CropSquareIcon\r\n            style={{ display: \"flex\" }}\r\n            icon={<ArrowCircleLeftIcon />}\r\n            onClick={setSelectedChat(\"\")}\r\n          />\r\n          {!selectedChat.isGroupChat ? (\r\n            <></>\r\n          ) : (\r\n            <>\r\n              {selectedChat.chatName.toUpperCase()}\r\n              {/*<UpdateGroupChatModal\r\n            fetchAgain={fetchAgain}\r\n            setFetchAgain={setFetchAgain}\r\n            /> */}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n          <h3>Click on the user to start chatting</h3>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,mBAAmB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,UAAU,GAAGC,IAAA,IAAmC;EAAA,IAAlC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC/C,MAAM;IAAEG,IAAI;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGd,SAAS,EAAE;EAC3D,oBACEK,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGF,YAAY,gBACXR,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACEV,OAAA,CAACH,cAAc;QACbc,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAC3BC,IAAI,eAAEb,OAAA,CAACF,mBAAmB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QAC9BC,OAAO,EAAET,eAAe,CAAC,EAAE;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B,EACD,CAACT,YAAY,CAACW,WAAW,gBACxBnB,OAAA,CAAAE,SAAA,oBAAK,gBAELF,OAAA,CAAAE,SAAA;QAAAQ,QAAA,EACGF,YAAY,CAACY,QAAQ,CAACC,WAAW;MAAE,iBAMvC;IAAA,gBACA,gBAEHrB,OAAA,CAACJ,GAAG;MAACgB,OAAO,EAAC,MAAM;MAACU,UAAU,EAAC,QAAQ;MAACC,cAAc,EAAC,QAAQ;MAAAb,QAAA,eAC7DV,OAAA;QAAAU,QAAA,EAAI;MAAmC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE/C,iBACA;AAEP,CAAC;AAACO,EAAA,GA9BIrB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}