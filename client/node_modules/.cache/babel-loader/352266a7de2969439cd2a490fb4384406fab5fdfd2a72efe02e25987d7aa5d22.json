{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Community = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newComment, setNewComment] = useState(\"\");\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n\n  // Fetch all questions from backend API\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"/api/community/allQuestions\");\n        setQuestions(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  // Handle form submit to create a new question\n  const handleQuestionSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"/api/community/askQuestion\", {\n        question: newQuestion\n      });\n      setQuestions([...questions, response.data]);\n      setNewQuestion(\"\");\n    } catch (error) {\n      console.error(\"Failed to create question:\", error);\n    }\n  };\n\n  // Handle form submit to create a new comment for a selected question\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(`/api/questions/${selectedQuestion._id}/comments`, {\n        comment: newComment\n      });\n      const updatedQuestions = questions.map(question => {\n        if (question._id === selectedQuestion._id) {\n          return {\n            ...question,\n            comments: response.data.comments\n          };\n        } else {\n          return question;\n        }\n      });\n      setQuestions(updatedQuestions);\n      setNewComment(\"\");\n    } catch (error) {\n      console.error(\"Failed to create comment:\", error);\n    }\n  };\n\n  // Handle delete comment button click for a selected question\n  const handleDeleteComment = async commentId => {\n    try {\n      const response = await axios.delete(`/api/questions/${selectedQuestion._id}/comments/${commentId}`);\n      const updatedQuestions = questions.map(question => {\n        if (question._id === selectedQuestion._id) {\n          return {\n            ...question,\n            comments: response.data.comments\n          };\n        } else {\n          return question;\n        }\n      });\n      setQuestions(updatedQuestions);\n    } catch (error) {\n      console.error(\"Failed to delete comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [question.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [comment.comment, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              children: \"Delete Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: event => setNewComment(event.target.value),\n            placeholder: \"Add a comment\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleQuestionSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newQuestion,\n        onChange: event => setNewQuestion(event.target.value),\n        placeholder: \"Type your question here\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Community, \"iyWpAKBid5T+oqbc1hj5w6RNY1A=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Community","_s","questions","setQuestions","newQuestion","setNewQuestion","newComment","setNewComment","selectedQuestion","setSelectedQuestion","fetchQuestions","response","get","data","error","console","handleQuestionSubmit","event","preventDefault","post","question","handleCommentSubmit","_id","comment","updatedQuestions","map","comments","handleDeleteComment","commentId","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/Community.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Community = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [newQuestion, setNewQuestion] = useState(\"\");\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n\r\n  // Fetch all questions from backend API\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/community/allQuestions\");\r\n        setQuestions(response.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch questions:\", error);\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  // Handle form submit to create a new question\r\n  const handleQuestionSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/community/askQuestion\", {\r\n        question: newQuestion,\r\n      });\r\n      setQuestions([...questions, response.data]);\r\n      setNewQuestion(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to create question:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle form submit to create a new comment for a selected question\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `/api/questions/${selectedQuestion._id}/comments`,\r\n        { comment: newComment }\r\n      );\r\n      const updatedQuestions = questions.map((question) => {\r\n        if (question._id === selectedQuestion._id) {\r\n          return { ...question, comments: response.data.comments };\r\n        } else {\r\n          return question;\r\n        }\r\n      });\r\n      setQuestions(updatedQuestions);\r\n      setNewComment(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to create comment:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle delete comment button click for a selected question\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `/api/questions/${selectedQuestion._id}/comments/${commentId}`\r\n      );\r\n      const updatedQuestions = questions.map((question) => {\r\n        if (question._id === selectedQuestion._id) {\r\n          return { ...question, comments: response.data.comments };\r\n        } else {\r\n          return question;\r\n        }\r\n      });\r\n      setQuestions(updatedQuestions);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Questions</h1>\r\n      <ul>\r\n        {questions.map((question) => (\r\n          <li key={question._id}>\r\n            {question.question}\r\n            <ul>\r\n              {question.comments.map((comment) => (\r\n                <li key={comment._id}>\r\n                  {comment.comment}{\" \"}\r\n                  <button onClick={() => handleDeleteComment(comment._id)}>\r\n                    Delete Comment\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <form onSubmit={handleCommentSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={newComment}\r\n                onChange={(event) => setNewComment(event.target.value)}\r\n                placeholder=\"Add a comment\"\r\n                required\r\n              />\r\n              <button type=\"submit\">Add Comment</button>\r\n            </form>\r\n            <hr />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>Ask a Question</h2>\r\n      <form onSubmit={handleQuestionSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={newQuestion}\r\n          onChange={(event) => setNewQuestion(event.target.value)}\r\n          placeholder=\"Type your question here\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}