{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Chatting\\\\Components\\\\SingleChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport Box from \"@mui/material/Box\";\nimport CropSquareIcon from \"@mui/icons-material/CropSquare\";\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\nimport \"./ChattingStyling.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  const [showUsersList, setShowUsersList] = useState(false);\n  const toggleUsersList = () => {\n    setShowUsersList(!showUsersList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"SingleChat\",\n        children: showUsersList ? /*#__PURE__*/_jsxDEV(CropSquareIcon, {\n          className: \"IconButton\",\n          onClick: toggleUsersList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ArrowCircleLeftIcon, {\n          className: \"IconButton\",\n          onClick: toggleUsersList,\n          sx: {\n            display: {\n              xs: \"block\",\n              sm: \"none\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        fontSize: \"28px\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), showUsersList && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      bottom: \"0\",\n      width: \"200px\",\n      bgcolor: \"background.paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SingleChat, \"iEBOZCD4aHs9fSWR6vVysu4Nihw=\");\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","useState","ChatState","Box","CropSquareIcon","ArrowCircleLeftIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleChat","_ref","_s","fetchAgain","setFetchAgain","user","selectedChat","setSelectedChat","showUsersList","setShowUsersList","toggleUsersList","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","xs","sm","alignItems","justifyContent","height","fontSize","position","top","left","bottom","width","bgcolor","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Chatting/Components/SingleChat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CropSquareIcon from \"@mui/icons-material/CropSquare\";\r\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\r\nimport \"./ChattingStyling.css\";\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const { user, selectedChat, setSelectedChat } = ChatState();\r\n  const [showUsersList, setShowUsersList] = useState(false);\r\n\r\n  const toggleUsersList = () => {\r\n    setShowUsersList(!showUsersList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <text className=\"SingleChat\">\r\n            {showUsersList ? (\r\n              <CropSquareIcon\r\n                className=\"IconButton\"\r\n                onClick={toggleUsersList}\r\n              />\r\n            ) : (\r\n              <ArrowCircleLeftIcon\r\n                className=\"IconButton\"\r\n                onClick={toggleUsersList}\r\n                sx={{\r\n                  display: { xs: \"block\", sm: \"none\" },\r\n                }}\r\n              />\r\n            )}\r\n          </text>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          height=\"100%\"\r\n        >\r\n          <text fontSize=\"28px\">Click on a user to start chatting</text>\r\n        </Box>\r\n      )}\r\n\r\n      {showUsersList && (\r\n        <Box\r\n          position=\"absolute\"\r\n          top=\"0\"\r\n          left=\"0\"\r\n          bottom=\"0\"\r\n          width=\"200px\"\r\n          bgcolor=\"background.paper\"\r\n        >\r\n          {/* Here is the code to display the users list */}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,UAAU,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAC/C,MAAM;IAAEI,IAAI;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGf,SAAS,EAAE;EAC3D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5BD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,GACGL,YAAY,gBACXT,OAAA,CAAAE,SAAA;MAAAY,QAAA,eACEd,OAAA;QAAMe,SAAS,EAAC,YAAY;QAAAD,QAAA,EACzBH,aAAa,gBACZX,OAAA,CAACH,cAAc;UACbkB,SAAS,EAAC,YAAY;UACtBC,OAAO,EAAEH;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzB,gBAEFpB,OAAA,CAACF,mBAAmB;UAClBiB,SAAS,EAAC,YAAY;UACtBC,OAAO,EAAEH,eAAgB;UACzBQ,EAAE,EAAE;YACFC,OAAO,EAAE;cAAEC,EAAE,EAAE,OAAO;cAAEC,EAAE,EAAE;YAAO;UACrC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACI,iBACN,gBAEHpB,OAAA,CAACJ,GAAG;MACF0B,OAAO,EAAC,MAAM;MACdG,UAAU,EAAC,QAAQ;MACnBC,cAAc,EAAC,QAAQ;MACvBC,MAAM,EAAC,MAAM;MAAAb,QAAA,eAEbd,OAAA;QAAM4B,QAAQ,EAAC,MAAM;QAAAd,QAAA,EAAC;MAAiC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEjE,EAEAT,aAAa,iBACZX,OAAA,CAACJ,GAAG;MACFiC,QAAQ,EAAC,UAAU;MACnBC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAC,GAAG;MACRC,MAAM,EAAC,GAAG;MACVC,KAAK,EAAC,OAAO;MACbC,OAAO,EAAC;IAAkB;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAI7B;EAAA,gBACA;AAEP,CAAC;AAACf,EAAA,CAtDIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}