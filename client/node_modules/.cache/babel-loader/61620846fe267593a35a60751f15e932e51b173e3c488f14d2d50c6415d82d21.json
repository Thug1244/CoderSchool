{"ast":null,"code":"import _toArray from \"C:/Users/Thug Life/Desktop/Mern/client/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Thug Life/Desktop/Mern/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Thug Life/Desktop/Mern/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectWithoutProperties from \"C:/Users/Thug Life/Desktop/Mern/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"font\", \"letterSpacing\", \"lineHeight\", \"size\", \"height\", \"bevelThickness\", \"bevelSize\", \"bevelEnabled\", \"bevelOffset\", \"bevelSegments\", \"curveSegments\", \"smooth\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { TextGeometry, FontLoader, mergeVertices } from 'three-stdlib';\nvar types = ['string', 'number'];\nvar getTextFromChildren = function getTextFromChildren(children) {\n  var label = '';\n  var rest = [];\n  React.Children.forEach(children, function (child) {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label].concat(rest);\n};\nvar Text3D = /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n  var _font = _ref.font,\n    _ref$letterSpacing = _ref.letterSpacing,\n    letterSpacing = _ref$letterSpacing === void 0 ? 0 : _ref$letterSpacing,\n    _ref$lineHeight = _ref.lineHeight,\n    lineHeight = _ref$lineHeight === void 0 ? 1 : _ref$lineHeight,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 1 : _ref$size,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 0.2 : _ref$height,\n    _ref$bevelThickness = _ref.bevelThickness,\n    bevelThickness = _ref$bevelThickness === void 0 ? 0.1 : _ref$bevelThickness,\n    _ref$bevelSize = _ref.bevelSize,\n    bevelSize = _ref$bevelSize === void 0 ? 0.01 : _ref$bevelSize,\n    _ref$bevelEnabled = _ref.bevelEnabled,\n    bevelEnabled = _ref$bevelEnabled === void 0 ? false : _ref$bevelEnabled,\n    _ref$bevelOffset = _ref.bevelOffset,\n    bevelOffset = _ref$bevelOffset === void 0 ? 0 : _ref$bevelOffset,\n    _ref$bevelSegments = _ref.bevelSegments,\n    bevelSegments = _ref$bevelSegments === void 0 ? 4 : _ref$bevelSegments,\n    _ref$curveSegments = _ref.curveSegments,\n    curveSegments = _ref$curveSegments === void 0 ? 8 : _ref$curveSegments,\n    smooth = _ref.smooth,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useMemo(function () {\n    return extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n  var ref = React.useRef(null);\n  var font = suspend( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var data, loader;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof _font === 'string')) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 3;\n          return fetch(_font);\n        case 3:\n          _context.next = 5;\n          return _context.sent.json();\n        case 5:\n          _context.t0 = _context.sent;\n          _context.next = 9;\n          break;\n        case 8:\n          _context.t0 = _font;\n        case 9:\n          data = _context.t0;\n          loader = new FontLoader();\n          return _context.abrupt(\"return\", loader.parse(data));\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })), [_font]);\n  var opts = useMemo(function () {\n    return {\n      font: font,\n      size: size,\n      height: height,\n      bevelThickness: bevelThickness,\n      bevelSize: bevelSize,\n      bevelEnabled: bevelEnabled,\n      bevelSegments: bevelSegments,\n      bevelOffset: bevelOffset,\n      curveSegments: curveSegments,\n      letterSpacing: letterSpacing,\n      lineHeight: lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  var _useMemo = useMemo(function () {\n      return getTextFromChildren(children);\n    }, [children]),\n    _useMemo2 = _toArray(_useMemo),\n    label = _useMemo2[0],\n    rest = _useMemo2.slice(1);\n  var args = React.useMemo(function () {\n    return [label, opts];\n  }, [label, opts]);\n  React.useLayoutEffect(function () {\n    if (smooth) {\n      ref.current.geometry = mergeVertices(ref.current.geometry, smooth);\n      ref.current.geometry.computeVertexNormals();\n    }\n  }, [args, smooth]);\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\nexport { Text3D };","map":{"version":3,"names":["_extends","React","useMemo","extend","suspend","TextGeometry","FontLoader","mergeVertices","types","getTextFromChildren","children","label","rest","Children","forEach","child","includes","push","concat","Text3D","forwardRef","_ref","fref","_font","font","_ref$letterSpacing","letterSpacing","_ref$lineHeight","lineHeight","_ref$size","size","_ref$height","height","_ref$bevelThickness","bevelThickness","_ref$bevelSize","bevelSize","_ref$bevelEnabled","bevelEnabled","_ref$bevelOffset","bevelOffset","_ref$bevelSegments","bevelSegments","_ref$curveSegments","curveSegments","smooth","props","_objectWithoutProperties","_excluded","RenamedTextGeometry","ref","useRef","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","loader","wrap","_callee$","_context","prev","next","fetch","sent","json","t0","abrupt","parse","stop","opts","_useMemo","_useMemo2","_toArray","slice","args","useLayoutEffect","current","geometry","computeVertexNormals","useImperativeHandle","createElement"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/node_modules/@react-three/drei/core/Text3D.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { TextGeometry, FontLoader, mergeVertices } from 'three-stdlib';\n\nconst types = ['string', 'number'];\n\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\n\nconst Text3D = /*#__PURE__*/React.forwardRef(({\n  font: _font,\n  letterSpacing = 0,\n  lineHeight = 1,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  smooth,\n  children,\n  ...props\n}, fref) => {\n  React.useMemo(() => extend({\n    RenamedTextGeometry: TextGeometry\n  }), []);\n  const ref = React.useRef(null);\n  const font = suspend(async () => {\n    let data = typeof _font === 'string' ? await (await fetch(_font)).json() : _font;\n    let loader = new FontLoader();\n    return loader.parse(data);\n  }, [_font]);\n  const opts = useMemo(() => {\n    return {\n      font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments,\n      letterSpacing,\n      lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  React.useLayoutEffect(() => {\n    if (smooth) {\n      ref.current.geometry = mergeVertices(ref.current.geometry, smooth);\n      ref.current.geometry.computeVertexNormals();\n    }\n  }, [args, smooth]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\n\nexport { Text3D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}