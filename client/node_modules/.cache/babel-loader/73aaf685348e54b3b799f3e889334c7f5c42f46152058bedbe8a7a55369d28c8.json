{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Community\\\\AskQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\"; // import the styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AskQuestion = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Get the authentication token from wherever it's stored in your app\n    const storedData = localStorage.getItem(\"userInfo\"); // assuming it's stored in localStorage\n\n    // Parse the string back to an object\n    const parsedData = JSON.parse(storedData);\n\n    // Access the token and userId values\n    const token = parsedData.token;\n    const userId = parsedData.userId;\n\n    // Create request body\n    const requestBody = {\n      title: title,\n      content: content,\n      author: userId // Pass the userId as the value for the author field\n    };\n\n    try {\n      // Make POST request to backend API with token in headers and request body\n      const response = await axios.post(\"/api/community/askQuestion\", requestBody, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\" // Set content type to application/json\n        }\n      });\n\n      // Handle successful post creation\n      //console.log(\"Post created successfully:\", response.data);\n\n      // Clear form fields\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      // Handle error\n      console.error(\"Error creating post:\", error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#da4ea2\"\n      },\n      children: [\"Sruck Somewhere \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), \"Ask Here\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: content,\n        onChange: setContent,\n        placeholder: \"Content\",\n        style: {\n          backgroundColor: \"white\"\n        },\n        modules: {\n          toolbar: [[{\n            header: [1, 2, false]\n          }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n            list: \"ordered\"\n          }, {\n            list: \"bullet\"\n          }, {\n            indent: \"-1\"\n          }, {\n            indent: \"+1\"\n          }], [\"link\", \"image\", \"video\"], [\"code-block\"]]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AskQuestion, \"eiXkh+GEjRZ8Svxty8bnXm2rLL0=\");\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","axios","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","AskQuestion","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","storedData","localStorage","getItem","parsedData","JSON","parse","token","userId","requestBody","author","response","post","headers","Authorization","error","console","data","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","width","backgroundColor","modules","toolbar","header","list","indent","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Community/AskQuestion.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import the styles\r\n\r\nconst AskQuestion = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get the authentication token from wherever it's stored in your app\r\n    const storedData = localStorage.getItem(\"userInfo\"); // assuming it's stored in localStorage\r\n\r\n    // Parse the string back to an object\r\n    const parsedData = JSON.parse(storedData);\r\n\r\n    // Access the token and userId values\r\n    const token = parsedData.token;\r\n    const userId = parsedData.userId;\r\n\r\n    // Create request body\r\n    const requestBody = {\r\n      title: title,\r\n      content: content,\r\n      author: userId, // Pass the userId as the value for the author field\r\n    };\r\n\r\n    try {\r\n      // Make POST request to backend API with token in headers and request body\r\n      const response = await axios.post(\r\n        \"/api/community/askQuestion\",\r\n        requestBody,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\", // Set content type to application/json\r\n          },\r\n        }\r\n      );\r\n\r\n      // Handle successful post creation\r\n      //console.log(\"Post created successfully:\", response.data);\r\n\r\n      // Clear form fields\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n    } catch (error) {\r\n      // Handle error\r\n      console.error(\"Error creating post:\", error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: \"center\", color: \"#da4ea2\" }}>\r\n        Sruck Somewhere <br></br>Ask Here\r\n      </h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Render form fields for title, content */}\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Title\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <ReactQuill\r\n          value={content}\r\n          onChange={setContent}\r\n          placeholder=\"Content\"\r\n          style={{ backgroundColor: \"white\" }}\r\n          modules={{\r\n            toolbar: [\r\n              [{ header: [1, 2, false] }],\r\n              [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n              [\r\n                { list: \"ordered\" },\r\n                { list: \"bullet\" },\r\n                { indent: \"-1\" },\r\n                { indent: \"+1\" },\r\n              ],\r\n              [\"link\", \"image\", \"video\"],\r\n              [\"code-block\"],\r\n            ],\r\n          }}\r\n        />\r\n        {/* Render other form fields */}\r\n        <button type=\"submit\">Ask Question</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}