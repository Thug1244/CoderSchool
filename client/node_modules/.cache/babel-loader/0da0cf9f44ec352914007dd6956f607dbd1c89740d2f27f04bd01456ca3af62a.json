{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thug Life\\\\Desktop\\\\Mern\\\\client\\\\src\\\\Modules\\\\Admin\\\\AllTeachers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllTeachers = () => {\n  _s();\n  const [teachers, setTeachers] = useState([]);\n  useEffect(() => {\n    const fetchTeachers = async () => {\n      try {\n        const response = await fetch(\"/api/user/teachers\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n            // Include any necessary authorization headers\n          }\n        });\n\n        const data = await response.json();\n        setTeachers(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTeachers();\n  }, []);\n  const handleDelete = async userId => {\n    try {\n      const response = await fetch(`/api/user/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        // Refresh the list of teachers after successful deletion\n        const updatedTeachers = teachers.filter(teacher => teacher._id !== userId);\n        setTeachers(updatedTeachers);\n      } else {\n        console.log(\"Error deleting user\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Teachers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), teachers.map(teacher => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: teacher.pic,\n        alt: teacher.name,\n        className: \"profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: teacher.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", teacher.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", teacher.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(teacher._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, teacher._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AllTeachers, \"cZnxZKQlIb4ihBPZHUxtTI+Fbgs=\");\n_c = AllTeachers;\nexport default AllTeachers;\nvar _c;\n$RefreshReg$(_c, \"AllTeachers\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllTeachers","_s","teachers","setTeachers","fetchTeachers","response","fetch","method","headers","data","json","error","console","log","handleDelete","userId","Authorization","token","ok","updatedTeachers","filter","teacher","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","src","pic","alt","name","email","role","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Thug Life/Desktop/Mern/client/src/Modules/Admin/AllTeachers.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AllTeachers = () => {\r\n  const [teachers, setTeachers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTeachers = async () => {\r\n      try {\r\n        const response = await fetch(\"/api/user/teachers\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // Include any necessary authorization headers\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        setTeachers(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchTeachers();\r\n  }, []);\r\n\r\n  const handleDelete = async (userId) => {\r\n    try {\r\n      const response = await fetch(`/api/user/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        // Refresh the list of teachers after successful deletion\r\n        const updatedTeachers = teachers.filter(\r\n          (teacher) => teacher._id !== userId\r\n        );\r\n        setTeachers(updatedTeachers);\r\n      } else {\r\n        console.log(\"Error deleting user\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>All Teachers</h1>\r\n      {teachers.map((teacher) => (\r\n        <div key={teacher._id} className=\"card\">\r\n          <img src={teacher.pic} alt={teacher.name} className=\"profile-pic\" />\r\n          <h3>{teacher.name}</h3>\r\n          <p>Email: {teacher.email}</p>\r\n          <p>Role: {teacher.role}</p>\r\n          <button onClick={() => handleDelete(teacher._id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTeachers;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}